plugins {
    id 'dev.architectury.loom' version '0.7.3-SNAPSHOT'
    id 'maven-publish'
}

apply from: 'https://files.latmod.com/public/markdown-git-changelog.gradle'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

def ENV = System.getenv()
version = "${mod_version}-build.${ENV.GITHUB_RUN_NUMBER ?: ENV.CI_PIPELINE_IID ?: 9999}"
archivesBaseName = project.archives_base_name
group = project.maven_group

loom {
    silentMojangMappingsLicense()

    mixinConfigs = []
    useFabricMixin = true

    dataGen {
        mod project.mod_id
    }

    launches {
        data {
            arg "--existing", file("src/main/resources").absolutePath
            arg "--assetIndex", "1.16"
            arg "--assetsDir", (ENV.GRADLE_USER_HOME ?: "${System.getProperty("user.home")}/.gradle") + "/caches/fabric-loom/assets"
        }
    }
}

repositories {
    maven { url "https://www.cursemaven.com" }
    maven { url "https://maven.saps.dev/minecraft" }
    maven { url "https://maven.shedaniel.me/" }
    maven {
        name 'tterrag'
        url 'https://maven.tterrag.com/'
        content {
            includeGroup 'mcjty.theoneprobe'
        }
    }

    maven {
        name = "parchmentmc"
        url = "https://maven.parchmentmc.org"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    forge "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.16.5:2021.08.08")
    }

    modImplementation "curse.maven:jei-238222:${jei_file}"
    modImplementation "me.shedaniel:architectury-forge:${arch_version}"
    modImplementation "dev.latvian.mods:kubejs-forge:${kubejs_version}"
    modImplementation "dev.latvian.mods:rhino:${rhino_version}"
    modImplementation "mcjty.theoneprobe:TheOneProbe-1.16:${top_version}:api"

    modRuntime "mcjty.theoneprobe:TheOneProbe-1.16:${top_version}"
    modRuntime "curse.maven:powah-352656:3232535"
    modRuntime "curse.maven:lollipop-347954:3232534"
    modRuntime "curse.maven:pipez-443900:3273405"
    modRuntime "curse.maven:ceramics-250617:3234775"
    modRuntime "curse.maven:mantle-74924:3439180"
    modRuntime "curse.maven:building-gadgets-298187:3205295"
    modRuntime "curse.maven:mekanism-268560:3206392"
    modRuntime "curse.maven:tinkers-construct-74072:3439200"
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        it.options.release = targetVersion
    }
}

java {
    // withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }

    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    classifier "dev"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
                artifactId = archivesBaseName + "-forge"
                classifier null
            }
        }
    }

    repositories {
        if (ENV.CI_API_V4_URL) {
            maven {
                url "${ENV.CI_API_V4_URL}/projects/${ENV.CI_PROJECT_ID}/packages/maven"
                credentials(HttpHeaderCredentials) {
                    name = 'Job-Token'
                    value = ENV.CI_JOB_TOKEN
                }
                authentication {
                    header(HttpHeaderAuthentication)
                }
            }
        }

        if (ENV.SAPS_TOKEN) {
            maven {
                url "https://maven.saps.dev/minecraft"
                credentials {
                    username = "ftb"
                    password = "${ENV.SAPS_TOKEN}"
                }
            }
        }

        if (ENV.FTB_MAVEN_TOKEN) {
            maven {
                url "https://maven.ftb.dev/release"
                credentials {
                    username = "ftb"
                    password = "${ENV.FTB_MAVEN_TOKEN}"
                }
            }
        }
    }
}

if (ENV.CURSEFORGE_KEY) {
    curseforge {
        apiKey = ENV.CURSEFORGE_KEY
        project {
            id = project.curseforge_id
            releaseType = "release"
            addGameVersion "Forge"
            addGameVersion "1.16.5"
            mainArtifact(remapJar.archivePath)
            changelog = getGitChangelog
            changelogType = 'markdown'
        }
    }
}
